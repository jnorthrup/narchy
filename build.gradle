buildscript {
    repositories {
        mavenCentral()
//        mavenLocal()
        jcenter()
        maven {
            url "http://plugins.gradle.org/m2/"
        }
//        maven {
//            url = "http://oss.sonatype.org/content/repositories/snapshots/"
//        }
        maven {
            url "http://jcenter.bintray.com"
        }
        //maven { url "https://oss.sonatype.org/content/groups/public/" }
        maven { url "http://repo.jenkins-ci.org/releases" }
    }
    dependencies {
//        classpath 'com.kncept.junit5.reporter:junit-reporter:1.0.0'
//        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0-M1'
        classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"
        //classpath "com.gradle:build-scan-plugin:1.10.2"
//        classpath "us.kirchmeier:gradle-capsule-plugin:1.0.2"

        classpath "me.champeau.gradle:jmh-gradle-plugin:0.4.8"

    }
}

/*
repositories {
    repositories {
        mavenCentral()
        jcenter()
    }
}
*/
/*
buildScan {
    licenseAgreementUrl = 'http://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}
*/


subprojects {

    group = 'narchy'
    version = '1.0'

    apply plugin: 'idea'
    apply plugin: 'java'
//    apply plugin: 'maven'
    apply plugin: "com.github.ben-manes.versions"



//    apply plugin: 'org.junit.platform.gradle.plugin'

//    buildscript {
//        repositories {
//            mavenCentral()
////        mavenLocal()
////        jcenter()
//            maven {
//                url "http://plugins.gradle.org/m2/"
//            }
//            maven {
//                url "http://jcenter.bintray.com"
//            }
//            //maven { url "https://oss.sonatype.org/content/groups/public/" }
//
//        }
//    }
    repositories {

        mavenCentral()
        jcenter()
	    maven { url 'https://dl.bintray.com/konsoletyper/teavm' }

        //maven { url "http://repo.maven.apache.org/maven2" }
        //maven { url "http://jcenter.bintray.com" }
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    }


    tasks.withType(JavaCompile) {

        sourceCompatibility = '12'
        targetCompatibility = '12'

        options.encoding = 'UTF-8'
        options.incremental = true // one flag, and things will get MUCH faster //doesnt seem compatible with jdk 11
        options.fork = true


//        options.debugOptions.debugLevel = "source,lines,vars"
//        options.debug=true
//        options.compilerArgs << '-verbose'

    }

    test {
        ignoreFailures = true
        useJUnitPlatform() {
            excludeTags 'slow'
        }

        reports {
            junitXml.enabled = false
            html.enabled = false
            
        }
        maxParallelForks =
                //Runtime.runtime.availableProcessors().intdiv(2) ?: 1
                Math.max(1, Runtime.runtime.availableProcessors())


//        maxHeapSize = "1024m"
//        useJUnitPlatform()
//        useJUnitPlatform {
////            //includeTags 'fast', 'smoke & feature-a'
//            excludeTags 'slow'
//            includeEngines 'junit-jupiter'
////            // excludeEngines 'junit-vintage'
//       }
        systemProperties = [
                'junit.jupiter.execution.parallel.enabled': 'true'
//                'junit.jupiter.extensions.autodetection.enabled': 'true',
//                'junit.jupiter.testinstance.lifecycle.default': 'per_class'
        ]
    }

//    junitHtmlReport {
//        //https://github.com/kncept/junit-reporter
//        // If true, then instead of producing multiple reports per test folder (test run),
//        // aggregate them all together into the test-reports root directory.
//        //
//        // Also use this if all your test results end up directly in the test-results directory
//        aggregated = true
//
//        //RAG status css overrides
//        cssRed = 'red'
//        cssAmber = 'orange'
//        cssGreen = 'green'
//    }
}
