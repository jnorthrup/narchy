// inheritance-based syllogism
//
//       (A --> B) ------- (B --> C)
//            \               /
//             \             /
//              \           /
//               \         /
//                (A --> C)

//DEDUCTION ---------------------------

    (M --> P), (S --> M), neqRCom(S,P), has(S,"."), has(P,".")    |- (S --> P), (Belief:Deduction, Time:Compose)
    (S --> M), (M --> P), neqRCom(S,P), has(S,"."), has(P,".")    |- (S --> P), (Belief:Deduction, Time:Compose)

      (M --> P), (S --> M), neqRCom(S,P), has(S,"."), has(P,".")  |- (S --> P), (Goal:Desire, Time:Task)
      (S --> M), (M --> P), neqRCom(S,P), has(S,"."), has(P,".")  |- (S --> P), (Goal:Desire, Time:Task)

       (S --> P), (S --> M), neqRCom(P,M)  |- (M --> P), (Punctuation:AskAsk, Time:Task)
        (S --> P), (M --> P), neqRCom(S,M)  |- (S --> M), (Punctuation:AskAsk, Time:Task)
       (P --> S), (M --> S), neqRCom(P,M)  |- (P --> M), (Punctuation:AskAsk, Time:Task)
        (P --> S), (P --> M), neqRCom(S,M)  |- (M --> S), (Punctuation:AskAsk, Time:Task)

       (M --> P), (S --> M), task("!"), neqRCom(S,P)   |- (S --> M), (Punctuation:Quest, Time:Compose)
       (P --> M), (M --> S), task("!"), neqRCom(S,P)   |- (M --> S), (Punctuation:Quest, Time:Compose)

//EXEMPLIFICATION
    (P --> M), (M --> S), neqRCom(S,P), has(S,"."), has(P,".")   |- (S --> P), (Belief:Exemplification, Time:Compose)
    (M --> P), (S --> M), neqRCom(S,P), has(S,"."), has(P,".")   |- (P --> S), (Belief:Exemplification, Time:Compose)

      (P --> M), (M --> S), neqRCom(S,P), has(S,"."), has(P,".")  |- (S --> P), (Goal:DesireWeak, Time:Task)
      (M --> P), (S --> M), neqRCom(S,P), has(S,"."), has(P,".")  |- (P --> S), (Goal:DesireWeak, Time:Task)

       (S --> P), (P --> M), neqRCom(S,M)  |- (M --> S), (Punctuation:AskAsk, Time:Task)
        (S --> P), (M --> S), neqRCom(P,M)  |- (P --> M), (Punctuation:AskAsk, Time:Task)
       (P --> S), (M --> P), neqRCom(S,M)  |- (S --> M), (Punctuation:AskAsk, Time:Task)
        (P --> S), (S --> M), neqRCom(P,M)  |- (M --> P), (Punctuation:AskAsk, Time:Task)

        (P --> M), (M --> S), task("!"), neqRCom(S,P)   |- (M --> S), (Punctuation:Quest, Time:Compose)
        (M --> P), (S --> M), task("!"), neqRCom(S,P)   |- (S --> M), (Punctuation:Quest, Time:Compose)


//ABDUCTION ---------------------------
    (P --> M), (S --> M), neqRCom(S,P), has(S,"."), has(P,".")      |- (S --> P), (Belief:Abduction, Time:Compose)
    (M --> P), (M --> S), neqRCom(S,P), has(S,"."), has(P,".")      |- (P --> S), (Belief:Abduction, Time:Compose)

        //dangerously sticky:
        //(P --> M), (S --> M), neqRCom(S,P)      |- (S --> P), (Goal:DesireWeak, Time:Task)
        //(M --> P), (M --> S), neqRCom(S,P)      |- (P --> S), (Goal:DesireWeak, Time:Task)

       (S --> P), (P --> M), neqRCom(S,M)  |- (S --> M), (Punctuation:AskAsk, Time:Task)
        (S --> P), (S --> M), neqRCom(P,M)  |- (P --> M), (Punctuation:AskAsk, Time:Task)
       (P --> S), (M --> P), neqRCom(S,M)  |- (M --> S), (Punctuation:AskAsk, Time:Task)
        (P --> S), (M --> S), neqRCom(P,M)  |- (M --> P), (Punctuation:AskAsk, Time:Task)

        (P --> M), (S --> M), task("!"), neqRCom(M,P)   |- (S --> M), (Punctuation:Quest, Time:Compose)
        (M --> P), (M --> S), task("!"), neqRCom(M,P)   |- (M --> S), (Punctuation:Quest, Time:Compose)


//INDUCTION ---------------------------

    (M --> P), (M --> S), neqRCom(S,P), has(S,"."), has(P,".")      |- (S --> P), (Belief:Induction, Time:Compose)
    (P --> M), (S --> M), neqRCom(S,P), has(S,"."), has(P,".")      |- (P --> S), (Belief:Induction, Time:Compose)

        //dangerously sticky:
        //(M --> P), (M --> S), neqRCom(S,P)      |- (S --> P), (Goal:DesireWeak, Time:Task)
        //(P --> M), (S --> M), neqRCom(S,P)      |- (P --> S), (Goal:DesireWeak, Time:Task)

       (S --> P), (M --> P), neqRCom(M,S)  |- (M --> S), (Punctuation:AskAsk, Time:Task)
        (S --> P), (M --> S), neqRCom(M,P)  |- (M --> P), (Punctuation:AskAsk, Time:Task)
       (P --> S), (P --> M), neqRCom(M,S)  |- (S --> M), (Punctuation:AskAsk, Time:Task)
        (P --> S), (S --> M), neqRCom(M,P)  |- (P --> M), (Punctuation:AskAsk, Time:Task)

        (M --> P), (M --> S), task("!"), neqRCom(S,M)  |- (M --> S), (Punctuation:Quest, Time:Compose)
        (P --> M), (S --> M), task("!"), neqRCom(S,M)  |- (S --> M), (Punctuation:Quest, Time:Compose)



