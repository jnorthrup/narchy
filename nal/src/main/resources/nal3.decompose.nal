//NAL3 single premise belief/goal decompose
(M --> C), X, eventOfPN(C,X)    |-   (M --> conjWithoutPN(C,X)), (Belief:StructuralDeduction,Goal:StructuralDeduction)
  (M --> D), X, eventOfPN(D,X)  |- --(M --> conjWithoutPN(D,X)), (Belief:StructuralDeductionWeakN,Goal:StructuralDeductionWeakN)
(C --> M), X, eventOfPN(C,X)    |-   (conjWithoutPN(C,X) --> M), (Belief:StructuralDeduction,Goal:StructuralDeduction)
  (D --> M), X, eventOfPN(D,X)  |- --(conjWithoutPN(D,X) --> M), (Belief:StructuralDeductionWeakN,Goal:StructuralDeductionWeakN)

//(M --> I), X, eventOfPN(I,X)  |-   polarizeTask((M --> conjWithoutPN(I,X))), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)
//(I --> M), X, eventOfPN(I,X)  |-   polarizeTask((conjWithoutPN(I,X) --> M)), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)
  //(I <-> M), X, eventOfPN(I,X)  |-   polarizeTask((conjWithoutPN(I,X) <-> M)), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)

//Self Factor
(X --> Y), (X --> Y), eventCommon(X,Y)  |-  polarizeTask((conjWithout(X,Y) --> conjWithout(Y,X))), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)
  (X <-> Y), (X <-> Y), eventCommon(X,Y)  |-  polarizeTask((conjWithout(X,Y) <-> conjWithout(Y,X))), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)


//NAL3 single premise question/quest decompose
( M --> I), X, eventOfPN(I,X) |- (M --> conjWithoutPN(I,X)), (Punctuation:AskAsk)
( I --> M), X, eventOfPN(I,X) |- (conjWithoutPN(I,X) --> M), (Punctuation:AskAsk)
  ( M <-> I), X, eventOfPN(I,X) |- (M <-> conjWithoutPN(I,X)), (Punctuation:AskAsk)


//NAL3 double premise decompose
//  if (S --> M) is the case, and ((|,S,A..+) --> M) is not the case, then ((|,A..+) --> M) is not the case, hence Belief:DeductionPositiveNegativeNegative

//predicate (intensional, conj)
(M --> C), (M --> X),  eventOf(C,X)       |-    (M-->conjWithout(C,   X)), (Belief:DeductionPP, Goal:DeductionPP, Time:Task)
  (M --> X), (M --> C),  eventOf(C,X)       |-    (M-->conjWithout(C,   X)), (Belief:DeductionPP, Goal:DeductionPP, Time:Task)
(M --> C), (M --> X),  eventOfNeg(C,X)    |-    (M-->conjWithout(C, --X)), (Belief:DeductionPN, Goal:DeductionPN, Time:Task)
 (M --> X), (M --> C),  eventOfNeg(C,X)    |-    (M-->conjWithout(C, --X)), (Belief:DeductionNP, Goal:DeductionNP, Time:Task)
  (M --> D), (M --> X),  eventOfNeg(D,X)  |-  --(M-->conjWithout(D, --X)), (Belief:DeductionNN, Goal:DeductionNN, Time:Task)
   (M --> X), (M --> D),  eventOfNeg(D,X)  |-  --(M-->conjWithout(D, --X)), (Belief:DeductionNN, Goal:DeductionNN, Time:Task)
  (M --> D), (M --> X),  eventOf(D,X)     |-  --(M-->conjWithout(D,   X)), (Belief:DeductionNP, Goal:DeductionNP, Time:Task)
   (M --> X), (M --> D),  eventOf(D,X)     |-  --(M-->conjWithout(D,   X)), (Belief:DeductionPN, Goal:DeductionPN, Time:Task)

//subject (extensional, disj)
(C --> M), (X --> M),  eventOf(C,X)       |-    (conjWithout(C,   X)-->M), (Belief:DeductionPP, Goal:DeductionPP, Time:Task)
 (X --> M), (C --> M),  eventOf(C,X)       |-    (conjWithout(C,   X)-->M), (Belief:DeductionPP, Goal:DeductionPP, Time:Task)
(C --> M), (X --> M),  eventOfNeg(C,X)    |-    (conjWithout(C, --X)-->M), (Belief:DeductionPN, Goal:DeductionPN, Time:Task)
 (X --> M), (C --> M),  eventOfNeg(C,X)    |-    (conjWithout(C, --X)-->M), (Belief:DeductionNP, Goal:DeductionNP, Time:Task)
  (D --> M), (X --> M),  eventOfNeg(D,X)  |-  --(conjWithout(D, --X)-->M), (Belief:DeductionNN, Goal:DeductionNN, Time:Task)
   (X --> M), (D --> M),  eventOfNeg(D,X)  |-  --(conjWithout(D, --X)-->M), (Belief:DeductionNN, Goal:DeductionNN, Time:Task)
  (D --> M), (X --> M),  eventOf(D,X)     |-  --(conjWithout(D,   X)-->M), (Belief:DeductionNP, Goal:DeductionNP, Time:Task)
   (X --> M), (D --> M),  eventOf(D,X)     |-  --(conjWithout(D,   X)-->M), (Belief:DeductionPN, Goal:DeductionPN, Time:Task)
