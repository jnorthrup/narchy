//NAL3 single premise belief/goal decompose
(M --> I), X, eventOfPN(I,X)  |-   polarizeTask((M --> conjWithoutPN(I,X))), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)
(I --> M), X, eventOfPN(I,X)  |-   polarizeTask((conjWithoutPN(I,X) --> M)), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)

//Self Factor
((&&,X,A..+) --> (&&,Y,A..+)), ((&&,X,A..+) --> (&&,Y,A..+))  |-  polarizeTask((X --> Y)), (Belief:StructuralDeductionDD,Goal:StructuralDeductionDD)

//NAL3 single premise question/quest decompose
( M --> I), X, eventOfPN(I,X) |- (M --> conjWithoutPN(I,X)), (Punctuation:AskAsk)
( I --> M), X, eventOfPN(I,X) |- (conjWithoutPN(I,X) --> M), (Punctuation:AskAsk)


//NAL3 double premise decompose
//  if (S --> M) is the case, and ((|,S,A..+) --> M) is not the case, then ((|,A..+) --> M) is not the case, hence Belief:DeductionPositiveNegativeNegative

//    (M-->G), (M-->C), eventOf..                    |-  polarizeBelief((M-->conjWithout(C, polarizeTask(G)))),  (Goal:DeductionDepolarized, Time:TaskEvent)
//    (G-->M), (C-->M)                    |-  polarizeBelief((conjWithout(C, polarizeTask(G))-->M)),  (Goal:DeductionDepolarized, Time:TaskEvent)
    (M --> G), (M --> C), eventOf(C,G)        |-    (M --> conjWithout(C,   G)), (Goal:DeductionPP, Time:Task)
    (M --> G), (M --> C), eventOfNeg(C,G)     |-    (M --> conjWithout(C, --G)), (Goal:DeductionNP, Time:Task)
        (M --> G), (M --> D), eventOfNeg(D,G) |-  --(M --> conjWithout(D, --G)), (Goal:DeductionNN, Time:Task)
        (M --> G), (M --> D), eventOf(D,G)    |-  --(M --> conjWithout(D,   G)), (Goal:DeductionPN, Time:Task)

    (G --> M), (C --> M), eventOf(C,G)        |-    (conjWithout(C,   G) --> M), (Goal:DeductionPP, Time:Task)
    (G --> M), (C --> M), eventOfNeg(C,G)     |-    (conjWithout(C, --G) --> M), (Goal:DeductionNP, Time:Task)
        (G --> M), (D --> M), eventOfNeg(D,G) |-  --(conjWithout(D, --G) --> M), (Goal:DeductionNN, Time:Task)
        (G --> M), (D --> M), eventOf(D,G)    |-  --(conjWithout(D,   G) --> M), (Goal:DeductionPN, Time:Task)

//predicate (intensional, conj)
(M --> C), (M --> X),  eventOf(C,X)       |-    (M-->conjWithout(C,   X)), (Belief:DeductionPP, Goal:DeductionPP, Time:Task)
(M --> C), (M --> X),  eventOfNeg(C,X)    |-    (M-->conjWithout(C, --X)), (Belief:DeductionPN, Goal:DeductionPN, Time:Task)
  (M --> D), (M --> X),  eventOfNeg(D,X)  |-  --(M-->conjWithout(D, --X)), (Belief:DeductionNN, Goal:DeductionNN, Time:Task)
  (M --> D), (M --> X),  eventOf(D,X)     |-  --(M-->conjWithout(D,   X)), (Belief:DeductionNP, Goal:DeductionNP, Time:Task)

//subject (extensional, disj)
(C --> M), (X --> M),  eventOf(C,X)       |-    (conjWithout(C,   X)-->M), (Belief:DeductionPP, Goal:DeductionPP, Time:Task)
(C --> M), (X --> M),  eventOfNeg(C,X)    |-    (conjWithout(C, --X)-->M), (Belief:DeductionPN, Goal:DeductionPN, Time:Task)
  (D --> M), (X --> M),  eventOfNeg(D,X)  |-  --(conjWithout(D, --X)-->M), (Belief:DeductionNN, Goal:DeductionNN, Time:Task)
  (D --> M), (X --> M),  eventOf(D,X)     |-  --(conjWithout(D,   X)-->M), (Belief:DeductionNP, Goal:DeductionNP, Time:Task)
