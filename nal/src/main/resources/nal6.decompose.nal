//conjunction/disjunction structural decomposition
//   see: https://en.wikipedia.org/wiki/Imperative_logic#Ross.27_Paradox



//free structural Conjunction/Disjunction decomposition
C, X,  conjParallel(C), eventOfPN(C,X)   |-   conjWithoutPN(C,X), (Belief:StructuralDeduction)
  C, X, conjParallel(C), eventOfPN(C,X)  |-   conjWithoutPN(C,X), (Goal:StructuralDeduction)

C, X, eventOfPN(C,X), --hasBelief()       |-   conjWithoutPN(C,X), (Punctuation:AskAsk)

  C, X, --isVar(X), hasBelief()                                     |- conjBefore(C,  polarizeBelief(X)), (Punctuation:AskAsk, Time:BeliefEvent)
  C, X, --isVar(X), hasBelief(), --conjParallel(C), conjSequence(C) |- conjAfter(C,  polarizeBelief(X)), (Punctuation:AskAsk, Time:BeliefEvent)


    //question short-circuit answer
    C, X, task("?"), eventOf(C,X)    |- --C,  (Belief:BeliefStructuralDeductionPN, Punctuation:Belief)
    C, X, task("?"), eventOfNeg(C,X) |-   C,  (Belief:BeliefStructuralDeductionPP, Punctuation:Belief)
        //TODO other short-circuits, involving ==> etc


    //impl conj/disj pred belief and question free structural implication decomposition
    (A ==> C), X, eventOfPN(C,X), --isVar(X)   |-   (A ==> conjWithoutPN(C,  X)), (Belief:StructuralDeduction)

      //(A ==> D), X, conjParallel(D), eventOf(D,X), --isVar(X)      |-   (A ==>   X), (Belief:StructuralDeductionN)
      //(A ==> D), X, conjParallel(D), eventOfNeg(D,X), --isVar(X)   |-   (A ==> --X), (Belief:StructuralDeductionN)


        //(A ==> C), X, eventOfPN(C,X)   |-   (A ==> conjWithoutPN(C,  X)), (Belief:StructuralDeduction)
          //(A ==> D), X, eventOfPN(D,X)   |-   (A ==> --conjWithoutPN(D,  X)), (Belief:StructuralDeductionWeakN)
        //(A ==> C), X, eventOfPN(C,X)   |-   polarizeTask((A ==> conjWithoutPN(C,  X))), (Belief:StructuralDeductionDepolarized)

         (A ==> C), X,  eventOfPN(C,X), task("?"), --isVar(X)   |- (A ==> conjWithoutPN(C,  X)), (Punctuation:Question)


//    //impl conj subj belief and question free structural implication decomposition
    //(  C ==> A), X,  eventOfPN(C,X), --isVar(X)   |- polarizeTask((  conjWithoutPN(C,    X) ==> A)), (Belief:StructuralDeductionDepolarized)
      //(  --D ==> A), X, conjParallel(D), eventOfNeg(D,X), --isVar(X) |- polarizeTask((  X ==> A)), (Belief:StructuralDeductionDepolarized)
      //(  --D ==> A), X, conjParallel(D), eventOf(D,X), --isVar(X) |- polarizeTask((  --X ==> A)), (Belief:StructuralDeductionDepolarized)
//
        (  C ==> A), X, eventOfPN(C,X), task("?"), --isVar(X)   |- (  conjWithoutPN(C,  X) ==> A), (Punctuation:Question)
//          (  --D ==> A), X, conjParallel(D), eventOfNeg(D,X), task("?"), --isVar(X) |- (  X ==> A), (Punctuation:Question)
//          (  --D ==> A), X, conjParallel(D), eventOf(D,X), task("?"), --isVar(X)    |- (--X ==> A), (Punctuation:Question)

        //(A ==> C), (A ==> C), task("?"), --isVar(C)                 |- C, (Punctuation:Question)
        //(C ==> A), (C ==> A), task("?"), --isVar(C), --eqPN(A,C)    |- C, (Punctuation:Question)





    (B ==> (&&,X,A..+)), Y, --isVar(X),--isVar(Y), hasBelief()  |- polarizeTask(unisubst((B ==> (&&,X,A..+)),X,polarizeBelief(Y)),novel), (Belief:DecomposeDepolarized, Time:BeliefEvent)
    ((&&,X,A..+) ==> B), Y, --isVar(X),--isVar(Y), hasBelief()  |- polarizeTask(unisubst(((&&,X,A..+) ==> B),X,polarizeBelief(Y)),novel), (Belief:DecomposeDepolarized, Time:BeliefEvent)
      //(B ==> (&&,X,A..+)), Y, --isVar(X),--isVar(Y)  |- polarizeTask(unisubst((B ==> (&&,A..+)),X,polarizeBelief(Y))), (Belief:DecomposeDepolarized, Time:BeliefEvent)
      //((&&,X,A..+) ==> B), Y, --isVar(X),--isVar(Y)  |- polarizeTask(unisubst(((&&,A..+) ==> B),X,polarizeBelief(Y))), (Belief:DecomposeDepolarized, Time:BeliefEvent)





//    //goal/antigoal in sequence
//    X, C, eventOf(C,X), --eventOfNeg(C,X)   |- C, (Goal:DesireWeak, Time:BeliefAtTask)
//      //X, C, eventOfNeg(C,X), --eventOf(C,X)   |- --C, (Goal:Decompose, Time:BeliefAtTask)
//    X, C, eventOfNeg(C,X), --eventOf(C,X)   |- C, (Goal:DesireWeakN, Time:BeliefAtTask)
//      //X, C, eventOf(C,X), --eventOfNeg(C,X)   |- --C, (Goal:DecomposeN, Time:BeliefAtTask)

    //X, C, eventOfNeg(C,X) |- --conjWithout(C,--X), (Goal:DesireWeak, Time:BeliefSubSequence)
    //X, C, eventOf(C,X)    |- --conjWithout(C,X), (Goal:DesireWeakN, Time:BeliefSubSequence)




    //X is the desired event suffix (outcome).
    //C is a sequence ending in it.  this forms a goal of the sequence prefix (minus the trailing)

    //desire for sub-sequence leading to goal,  truth function may be Desire or Deduction
    G, C     |-    conjBefore(C,   G),  (Goal:DecomposePP, Time:TaskEvent)
    G, C     |-  --conjBefore(C, --G),  (Goal:DecomposePP, Time:TaskEvent)
    G, C     |-  --conjBefore(C,   G),  (Goal:DecomposeNP, Time:TaskEvent)
    G, C     |-    conjBefore(C, --G),  (Goal:DecomposeNP, Time:TaskEvent)

      G, D   |-    conjBefore(D,   G),  (Goal:DecomposePN, Time:TaskEvent)
      G, D   |-    conjBefore(D, --G),  (Goal:DecomposeNN, Time:TaskEvent)


      //G, D, neq(G,D)   |-    conjBefore(D, --G),  (Goal:DecomposeWeakPN, Time:TaskEvent)
      //G, D, neq(G,C)                |-    conjBefore(D,   G),  (Goal:DecomposeWeakNN, Time:TaskEvent)

//    //conditional goal disjunction decompose (alternate suppress by goal)
//    G, D, sectOf(D,G), conjParallel(D)      |- --unsect(D,  G), (Goal:DesireWeakPN)
//    G, D, sectOf(D,--G), conjParallel(D)   |- --unsect(D,--G), (Goal:DesireWeakNN)
            //--eventOfNeg(C,G) , --eventOf(C,G) <- optional additional renovelion of anti-goal not present anywhere in the sequence


//// propositional decomposition ////////////////////////////////////////////////////////////////////////////////////
//If S is the case, and (&&,S,A..+) is not the case, it can't be that (&&,A..+) is the case


     C, X, --isVar(X)                            |-   conjBefore(C,  X), (Belief:DecomposePP, Time:BeliefEvent)
       C, X, conjSequence(C), --isVar(X)     |-   conjAfter(C,  X), (Belief:DecomposePP, Time:BeliefEvent)
         C, X, --isVar(X)                        |-   --conjBefore(C,  X), (Belief:DecomposePN, Time:BeliefEvent)
           C, X, conjSequence(C), --isVar(X)     |-   --conjAfter(C,  X), (Belief:DecomposePN, Time:BeliefEvent)
     C, X, --isVar(X)                     |-   conjBefore(C,--X), (Belief:DecomposePN, Time:BeliefEvent)
       C, X, conjSequence(C), --isVar(X)  |-   conjAfter(C,--X), (Belief:DecomposePN, Time:BeliefEvent)
         C, X, --isVar(X)                     |-   --conjBefore(C,--X), (Belief:DecomposePP, Time:BeliefEvent)
           C, X, conjSequence(C), --isVar(X)  |-   --conjAfter(C,--X), (Belief:DecomposePP, Time:BeliefEvent)

     D, X, --isVar(X)                     |-   conjBefore(D, --X), (Belief:DecomposeNP, Time:BeliefEvent)
       D, X, conjSequence(D), --isVar(X)  |-    conjAfter(D, --X), (Belief:DecomposeNP, Time:BeliefEvent)
     D, X, --isVar(X)                        |-     conjBefore(D,X), (Belief:DecomposeNN, Time:BeliefEvent)
       D, X, conjSequence(D), --isVar(X)     |-      conjAfter(D,X), (Belief:DecomposeNN, Time:BeliefEvent)
      D, X, --isVar(X)                        |-  --conjBefore(D, X), (Belief:DecomposeNP, Time:BeliefEvent)
        D, X, conjSequence(D), --isVar(X)     |-   --conjAfter(D, X), (Belief:DecomposeNP, Time:BeliefEvent)
      D, X, --isVar(X)                     |-   --conjBefore(D,--X), (Belief:DecomposeNN, Time:BeliefEvent)
        D, X, conjSequence(D), --isVar(X)  |-   --conjAfter(D,--X), (Belief:DecomposeNN, Time:BeliefEvent)


    C, X, --isVar(X)   |-     conjAfter(C,  X),       (Goal:DecomposePP, Time:BeliefEvent)
    C, X, --isVar(X)   |-     conjAfter(C,--X),       (Goal:DecomposePN, Time:BeliefEvent)
    C, X, --isVar(X)   |-   --conjAfter(C,  X),       (Goal:DecomposePN, Time:BeliefEvent)
    C, X, --isVar(X)   |-   --conjAfter(C,--X),       (Goal:DecomposePP, Time:BeliefEvent)

    D, X, --isVar(X)   |-   --conjAfter(D,   X),     (Goal:DecomposeNP, Time:BeliefEvent)
    D, X, --isVar(X)   |-   --conjAfter(D, --X),     (Goal:DecomposeNN, Time:BeliefEvent)
    D, X, --isVar(X)   |-     conjAfter(D,   X),     (Goal:DecomposeNN, Time:BeliefEvent)
    D, X,  --isVar(X)  |-     conjAfter(D, --X),     (Goal:DecomposeNP, Time:BeliefEvent)

//    C, X, --isVar(X)             |-   unisubst(C,chooseUnifiableSubEvent(C,--X),--X,"#",novel), (Belief:DecomposePN, Goal:DecomposePN, Time:BeliefEvent)
//    C, X, --isVar(X)                          |-   unisubst(C,chooseUnifiableSubEvent(C,  X),  X,"#",novel), (Belief:DecomposePP, Goal:DecomposePP, Time:BeliefEvent)

//    D, X, --isVar(X)             |- --unisubst(D,chooseUnifiableSubEvent(D,--X),--X,"#",novel), (Belief:DecomposeNN, Goal:DecomposeNN, Time:BeliefEvent)
//    D, X, --isVar(X)                          |- --unisubst(D,chooseUnifiableSubEvent(D,  X),  X,"#",novel), (Belief:DecomposeNP, Goal:DecomposeNP, Time:BeliefEvent)



//    //conjunction goal decomposition
//    G, C                   |-   conjAfter(C,  G), (Goal:DesirePP)
//      G, D                 |- --conjAfter(D,--G), (Goal:DesirePN)
//    G, C      |-   conjAfter(C,--G), (Goal:DesireWeakNP)
//      G, D                 |- --conjAfter(D,  G), (Goal:DesireWeakNN)

//      (C==>A), (X==>A), --isVar(X)     |- (conjAfter(C,  X) ==> A), (Belief:Decompose)
//      (C==>A), (X==>A), --isVar(X)     |- (conjAfter(C,  X) ==> A), (Belief:DecomposeNN)
      //(A==>C), (A==>X), --isVar(X)     |- (A ==> conjAfter(C,  X)), (Belief:Decompose)
      //(A==>C), (A==>X), --isVar(X)     |- (A ==> conjAfter(C,--X)), (Belief:DecomposePN)
      //(A==>C), (A==>X), --isVar(X)     |- (A ==> conjAfter(C,  X)), (Belief:DecomposeNN)


    //TODO nal3 shortcut - decompose trailing intersection/union event


//Anonymous Deduction and Abduction
    X, (V ==> X), task("?"), isUnneg(V,"#"), --isVar(X)      |- X, (Belief:BeliefStructuralReduction, Time:TaskEvent)

        X, (X ==> V), task("?"), is(V,"#"), --isVar(X)      |- X,   (Belief:BeliefStructuralAbduction, Time:TaskEvent)
        X, (--X ==> V), task("?"), is(V,"#"), --isVar(X)    |- --X, (Belief:BeliefStructuralAbduction, Time:TaskEvent)



    //TODO test and write predicate version:
      //(C==>Y), X, --isVar(X)           |-  polarizeTask((conjAfter(C,  polarizeBelief(X)) ==> Y)),       (Belief:DecomposeDepolarized,Goal:DecomposeDepolarized)
     // (--D==>Y), X, --isVar(X) |- polarizeTask((--unisubst(D,chooseUnifiableSubEvent(D,polarizeBelief(X)),polarizeBelief(X),"#") ==> Y)), (Belief:DecomposeDepolarized, Goal:DecomposeDepolarized)



//Conditional implication decomposition
//  Original:
//    (S ==> M), ((&&,S,A_1..n) ==> M) |- ((&&,A_1..n) ==> M), (Truth:DecomposeNegativePositivePositive, Order:ForAllSame, SequenceIntervals:FromBelief)
//    (S ==> M), ((||,S,A_1..n) ==> M) |- ((||,A_1..n) ==> M), (Truth:DecomposePositiveNegativeNegative, Order:ForAllSame)
//    (M ==> S), (M ==> (&&,S,A_1..n)) |- (M ==> (&&,A_1..n)), (Truth:DecomposePositiveNegativeNegative, Order:ForAllSame, SequenceIntervals:FromBelief)
//    (M ==> S), (M ==> (||,S,A_1..n)) |- (M ==> (||,A_1..n)), (Truth:DecomposeNegativePositivePositive, Order:ForAllSame)


    //conj
    ( C ==> M), (S ==> M), eventOf(C,S)                |-     (  conjWithout(C, S) ==> M), (Belief:DecomposePN, Time:Compose)
     ( C ==> M), (S ==> M), eventOfNeg(C,S)                |-     (  conjWithout(C, --S) ==> M), (Belief:DecomposePP, Time:Compose)
    ( C ==> M), (S ==> M), eventOf(C,S)                |-    --(  conjWithout(C, S) ==> M), (Belief:DecomposeNN, Time:Compose)
     ( C ==> M), (S ==> M), eventOfNeg(C,S)                |-    --(  conjWithout(C, --S) ==> M), (Belief:DecomposeNP, Time:Compose)

    //disj
    (  --C ==> M), (S ==> M), eventOf(C,S)          |-   (  --conjWithout(C, S) ==> M), (Belief:DecomposePN, Time:Compose)
       ( --C ==> M), (S ==> M), eventOf(C,S)        |- --(  --conjWithout(C, S) ==> M), (Belief:DecomposeNN, Time:Compose)
    (  --C ==> M), (S ==> M), eventOfNeg(C,S)          |-   (  --conjWithout(C, --S) ==> M), (Belief:DecomposePP, Time:Compose)
       ( --C ==> M), (S ==> M), eventOfNeg(C,S)        |- --(  --conjWithout(C, --S) ==> M), (Belief:DecomposeNP, Time:Compose)

//conj pred

//   //(M ==> C), (M ==> S), eventOf(C,S), --isVar(M)      |-   (M ==> conjWithout(C,   S)), (Belief:DecomposePP, Time:Compose)
//   (M ==> C), (M ==> S), eventOfNeg(C,S), --isVar(M)   |- --(M ==> conjWithout(C, --S)), (Belief:DecomposePP, Time:Compose)
//   //(M ==> C), (M ==> S), eventOfNeg(C,S), --isVar(M)   |-   (M ==> conjWithout(C, --S)), (Belief:DecomposePN, Time:Compose)
//   (M ==> C), (M ==> S), eventOf(C,S), --isVar(M)      |- --(M ==> conjWithout(C,   S)), (Belief:DecomposePN, Time:Compose)
//       //(M ==> C), (M ==> S), eventOf(C,S), --isVar(M)      |- --(M ==> conjWithout(C,   S)), (Belief:DecomposeNP, Time:Compose)
//       (M ==> C), (M ==> S), eventOfNeg(C,S), --isVar(M)   |-   (M ==> conjWithout(C, --S)), (Belief:DecomposeNP, Time:Compose)
//       //(M ==> C), (M ==> S), eventOfNeg(C,S), --isVar(M)   |- --(M ==> conjWithout(C, --S)), (Belief:DecomposeNN, Time:Compose)
//       (M ==> C), (M ==> S), eventOf(C,S), --isVar(M)      |-   (M ==> conjWithout(C,   S)), (Belief:DecomposeNN, Time:Compose)


   (M ==> C), (M ==> S), eventOf(C,S)                 |-   (M ==> conjWithout(C,   S)), (Belief:DecomposePP, Time:Compose)
     //(M ==> S), (M ==> C), eventOf(C,S)                 |-   (M ==> conjWithout(C,   S)), (Belief:DecomposePP, Time:TaskEvent)
   (M ==> C), (M ==> S), eventOfNeg(C,S)              |-   (M ==> conjWithout(C, --S)), (Belief:DecomposePN, Time:Compose)
     //(M ==> S), (M ==> C), eventOfNeg(C,S)              |-   (M ==> conjWithout(C, --S)), (Belief:DecomposeNP, Time:TaskEvent)

   (M ==> D), (M ==> S), eventOfNeg(D,S)               |- --(M ==> conjWithout(D, --S)), (Belief:DecomposeNN, Time:Compose)
    //(M ==> S), (M ==> D), eventOfNeg(D,S)               |- --(M ==> conjWithout(D, --S)), (Belief:DecomposeNN, Time:TaskEvent)
   (M ==> D), (M ==> S), eventOf(D,S)                  |- --(M ==> conjWithout(D,   S)), (Belief:DecomposeNP, Time:Compose)
    //(M ==> S), (M ==> D), eventOf(D,S)                  |- --(M ==> conjWithout(D,   S)), (Belief:DecomposePN, Time:TaskEvent)




//    Y, (&&,X,A..+)                  |- unisubst((&&,  X,A..+),X,Y,"#",novel), (Belief:Decompose)
//    Y, (&&,--X,A..+)                |- unisubst((&&,--X,A..+),X,Y,"#",novel), (Belief:DecomposeN)
//        Y, (&&,X,A..+), task("?")       |- unisubst((&&,  X,A..+),X,Y,"#",novel), (Punctuation:Question)
//        Y, (&&,--X,A..+), task("?")     |- unisubst((&&,--X,A..+),X,Y,"#",novel), (Punctuation:Question)
//        Y, (&&,X,A..+), task("@")       |- unisubst((&&,  X,A..+),X,Y,"#",novel), (Punctuation:Quest)
//        Y, (&&,--X,A..+), task("@")     |- unisubst((&&,--X,A..+),X,Y,"#",novel), (Punctuation:Quest)


          //Disjunction structural decompose: D = (||,a,b,..) = --(&&,--a, --b, ..)
          //   disabled: may be spam-like
            //D, X,conjParallel(D),  eventOfNeg(D,X)  |- --conjWithout(D,--X), (Belief:StructuralDeductionWeakN, Goal:StructuralDeductionWeakN)
            //D, X,conjParallel(D),  eventOf(D,X)     |- --conjWithout(D,X), (Belief:StructuralDeductionWeakN, Goal:StructuralDeductionWeakN)

    //D, X, --is(X,"#"),                     eventOf(D,X)     |- --X,  (Belief:StructuralDeductionWeakN, Time:TaskSubEventPos)
    //D, X, --is(X,"#"),conjParallel(D), eventOf(D,X)     |- --X,  (  Goal:StructuralDeductionWeakN, Time:TaskSubEventPos)
    //D, X, --is(X,"#"),                     eventOfNeg(D,X)  |-   X,  (Belief:StructuralDeductionWeakN, Time:TaskSubEventNeg)
    //D, X, --is(X,"#"),conjParallel(D), eventOfNeg(D,X)  |-   X,  (  Goal:StructuralDeductionWeakN, Time:TaskSubEventNeg)

//    //specific deduction
//    C, X, eventOf(C,X)           |-   conjWithout(C,  X), (Belief:DecomposePP)
//    C, X, eventOfNeg(C,X)        |-   conjWithout(C,--X), (Belief:DecomposePN)
    //disjunction select
//    D, X, eventOfNeg(D,X), conjParallel(D)            |-   X, (Goal:StructuralDeductionWeakN)
//    D, X, eventOf(D,X), conjParallel(D)               |- --X, (Goal:StructuralDeductionWeakN)

//    D, X, eventOfNeg(D,X), conjParallel(D)            |-   X, (Belief:StructuralDeductionN, Goal:StructuralDeductionN)
//    D, X, eventOf(D,X), conjParallel(D)               |- --X, (Belief:StructuralDeductionN, Goal:StructuralDeductionN)
        //D, X, eventOfPN(D,X)                            |- --conjWithoutPN(D,X), (Belief:StructuralDeductionWeakN, Goal:StructuralDeductionWeakN)
        //D, X, eventOfPN(D,X)                            |- --conjWithoutPN(D,X), (Belief:StructuralDeductionN, Goal:StructuralDeductionN)
        //D, X, eventOfPN(D,X)                            |-   conjWithoutPN(D,X), (Belief:StructuralDeductionWeak, Goal:StructuralDeductionWeak)

    //implication short-circuit doubt TODO
//    (--C==>Y), X, eventOf(C,X)    |- --(Y && C), (Belief:IntersectionPN)
//    (Y==>C), X, eventOf(C,X)    |- --(Y && C), (Belief:IntersectionPN)
//    (Y==>C), X, eventOfNeg(C,X) |-   (Y==>C), (Belief:IntersectionPP)

