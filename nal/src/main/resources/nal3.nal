//// inheritance composition ////////////////////////////////////////////////////////////////////////////////////
//If P and S are in the intension/extension of M, then union/difference and intersection can be built:
//The duality of extension and intension in NAL corresponds to the
//  duality of intersection and union in set theory â€” intensional intersection
//  corresponds to extensional union, and extensional intersection corresponds
//  to intensional union.

//question and quest tasks:
(M --> P), (M --> S), neqRCom(S,P), notSetsOrDifferentSets(S,P), hasBelief() |- (M --> interSect(P,  S)), (Punctuation:AskAsk, Time:Compose)
//(M --> P), (M --> S), neq(S,P), notSetsOrDifferentSets(S,P) |- (M --> unionSect(P,  S)), (Punctuation:AskAsk, Time:Compose)
(P --> M), (S --> M), neqRCom(S,P), notSetsOrDifferentSets(S,P), hasBelief() |- (interSect(P,  S) --> M), (Punctuation:AskAsk, Time:Compose)
//(P --> M), (S --> M), neq(S,P), notSetsOrDifferentSets(S,P) |- (unionSect(P,  S) --> M), (Punctuation:AskAsk, Time:Compose)


    (P --> M), (S --> M), --isVar(M),  neqRCom(S,P), notSetsOrDifferentSets(S,P) |- (interSect(polarizeTask(P),polarizeBelief(S)) --> M), (Belief:IntersectionDD, Time:Compose)
    (P --> M), (S --> M), --isVar(M),  neqRCom(S,P), notSetsOrDifferentSets(S,P), task("!"), hasBelief() |- (interSect(polarizeTask(P),polarizeBelief(S)) --> M), (Punctuation:Quest, Time:Compose)
    //(P --> M), (S --> M), --isVar(M),  neq(S,P), notSetsOrDifferentSets(S,P) |- (unionSect(polarizeTask(P),polarizeBelief(S)) --> M), (Belief:UnionDepolarized, Time:Compose)

        //(P --> M), (S --> M), hasBelief(), --isVar(M),neq(S,P), notSetsOrDifferentSets(S,P) |- (interSect(polarizeRandom(P),polarizeBelief(S)) --> M), (Punctuation:AskAll, Time:Compose)
        //(P --> M), (S --> M), task("!"),  --isVar(M),  neq(S,P), notSetsOrDifferentSets(S,P) |- (interSect(polarizeTask(P),polarizeRandom(S)) --> M), (Punctuation:Quest, Time:Compose)
        //(P --> M), (S --> M), task("?@"),  --isVar(M),neq(S,P), notSetsOrDifferentSets(S,P) |- (interSect(P,S) --> M), (Time:Compose)
        //(P --> M), (S --> M), task("?@"),  --isVar(M),neq(S,P), notSetsOrDifferentSets(S,P) |- (interSect(P,polarizeRandom(S)) --> M), (Time:Compose)


    (M --> P), (M --> S), --isVar(M), neqRCom(S,P), notSetsOrDifferentSets(S,P) |- (M --> interSect(polarizeTask(P),polarizeBelief(S))), (Belief:IntersectionDD, Time:Compose)
    (M --> P), (M --> S), --isVar(M), neqRCom(S,P), notSetsOrDifferentSets(S,P), task("!"), hasBelief() |- (M --> interSect(polarizeTask(P),polarizeBelief(S))), (Punctuation:Quest, Time:Compose)
    //(M --> P), (M --> S), --isVar(M), neq(S,P), notSetsOrDifferentSets(S,P) |- (M --> unionSect(polarizeTask(P),polarizeBelief(S))), (Belief:UnionDepolarized, Time:Compose)
        //(M --> P), (M --> S), hasBelief(),--isVar(M), neq(S,P), notSetsOrDifferentSets(S,P) |- (M --> interSect(polarizeRandom(P),polarizeBelief(S))), (Punctuation:AskAll, Time:Compose)
        //(M --> P), (M --> S), task("!"), --isVar(M),   neq(S,P), notSetsOrDifferentSets(S,P) |- (M --> interSect(polarizeTask(P),polarizeRandom(S))), (Punctuation:Quest, Time:Compose)
        //(M --> P), (M --> S), task("?@"), --isVar(M), neq(S,P), notSetsOrDifferentSets(S,P) |- (M --> interSect(P,S)), (Time:Compose)
        //(M --> P), (M --> S), task("?@"), --isVar(M), neq(S,P), notSetsOrDifferentSets(S,P) |- (M --> interSect(P,polarizeRandom(S))), (Time:Compose)


