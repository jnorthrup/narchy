//TODO check
//// Conversion
////  If S can stand for P, P can to a certain low degree also represent the class S
////  If after S usually P happens, then it might be a good guess that usually before P happens, S happens.
//
    (  P ==> S), (  S ==> P), task("?"), --isVar(P), --isVar(S), hasBelief()   |-     (P ==>   S),   (Belief:ConversionPP, Punctuation:Belief, Time:Compose)
    (--P ==> S), (  S ==> P), task("?"), --isVar(P), --isVar(S), hasBelief()   |-   (--P ==>   S),   (Belief:ConversionPN, Punctuation:Belief, Time:Compose)
    (  P ==> S), (--S ==> P), task("?"), --isVar(P), --isVar(S), hasBelief()   |-     (P ==> --S),   (Belief:ConversionPP, Punctuation:Belief, Time:Compose)
    (--P ==> S), (--S ==> P), task("?"), --isVar(P), --isVar(S), hasBelief()   |-   (--P ==> --S),   (Belief:ConversionPN, Punctuation:Belief, Time:Compose)


// Contraposition (structural)
//    a→b == ¬b→¬a		# contra positition [Lex contrapositionis]
// "If not smoking causes health, being not healthy may be the result of smoking"
// "If smoking causes not health, being healthy may be the result of not smoking"

//    (--S ==> P), (--S ==> P) |- (--P ==> --S), (Belief:Contraposition)


